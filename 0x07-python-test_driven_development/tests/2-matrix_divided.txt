========================
Test: 2-matrix_divided.py 
========================

function: ``matrix_divided(matrix, div)``.

Usage
=====
function that divides all elements of a matrix.

-----------------------------------------------------------------------

Importing
==========

Importing the function from the module.

::
    >>> matrix_divided = __import__("2-matrix_divided").matrix_divided


Division
=========

Normal Division
----------------
::
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, 2)
    [[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]

FLoating divisor
-----------------
::
    >>> matrix = [[10, 20, 30], [40, 50, 60]]
    >>> print(matrix_divided(matrix, 5.5))
    [[1.82, 3.64, 5.45], [7.27, 9.09, 10.91]]


Lists
======

Element is not a List
----------------------
::
    >>> matrix = [[1, 2, 3], 4]
	>>> matrix_divided(matrix, 3)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Elements aren't a list
-----------------------
::
    >>> matrix = [1, 2, 3, 4]
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

len of list
------------
::
    >>> matrix_divided([[1, 2, 3], [3, 2]], 12)
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size

string values
--------------
::
    >>> matrix_divided([[1, "Holberton"], ["School", 2]], 3)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

argumets
---------
::
    >>> matrix_divided()
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

one argumet
-----------
::
    >>> matrix_divided([1,2])
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

Div
====

string
------
::
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], "12")
    Traceback (most recent call last):
    ...
    TypeError: div must be a number
	 
is 0
-----
::
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

infinite float
---------------
::
    >>> matrix_divided([[1, 2], [2, 1]], float('inf'))
    [[0.0, 0.0], [0.0, 0.0]]

Docstring
==========

module:
    >>> module = __import__("2-matrix_divided").__doc__
    >>> len(module) > 1
    True

function:
    >>> fun = __import__("2-matrix_divided").matrix_divided.__doc__
    >>> len(fun) > 1
    True