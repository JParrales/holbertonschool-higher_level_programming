========================
Test: 1-my_list
========================

function: ``print_sorted(self)``.

Usage
=====
function that prints the list, but sorted (ascending sort).

----------------------------------------------------------

Importing
==========

Importing the function from the module.

::
    >>> MyList = __import__('1-my_list').MyList


Lists
======

List empty
    >>> my_list = MyList()
    >>> my_list.print_sorted()
    []
   
List with some elements
    >>> my_list.extend([4, 3, 2, 5])
    >>> my_list.print_sorted()
    [2, 3, 4, 5]

List already sorted
    >>> my_list.sort()
    >>> my_list.print_sorted()
    [2, 3, 4, 5]

List with negative numbers
    >>> my_list[:] = [-4, -123123, -53, -5]
    >>> my_list.print_sorted()
    [-123123, -53, -5, -4]

Error
=====

Arguments
    >>> my_list.print_sorted([2, 3])
    Traceback (most recent call last):
    ...
    TypeError: print_sorted() takes 1 positional argument but 2 were given

Docstring
==========

module:
    >>> module = __import__('1-my_list').__doc__
	>>> len(module) > 1
	True

class:
	>>> class = __import__('1-my_list').MyList.__doc__
    >>> len(c_doc) > 1
    True
 
method:
    >>> method= __import__('1-my_list').MyList.print_sorted.__doc__
    >>> len(m_doc) > 1
    True